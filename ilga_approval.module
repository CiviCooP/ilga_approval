<?php
/**
 * Custom Drupal module for the ILGA Membership approval process
 *
 * @author Klaas Eikelboom (CiviCooP)
 * @date 05 juli 2017
 * @license AGPL-3.0
 */

const ILGA_APPLICATION_WEBFORM_NID = 'ilga_application_webform_nid';

/* Hooks */
/* hook_menu() */
/**
 * @return array
 */
function ilga_approval_menu()
{
    $items = array();
    $items['admin/config/system/ilga-approval'] = [
        'title' => 'ILGA custom module',
        'description' => 'Configuration of the approval module',
        'page callback' => 'drupal_get_form',
        'page arguments' => ['_ilga_approval_config_form'],
        'access arguments' => ['access administration pages'],
        'type' => MENU_NORMAL_ITEM,
    ];
    $items['ilga_approval/view-comments/%'] = array(
        'title' => 'View comments',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('ilga_approval_view_comments', 2),
        'access callback' => 'user_access',
        'access arguments' => array('use ilga approval'),
    );
    return $items;
}

/**
 * Admin form for the configuration of all the webforms that are
 * part of this module
 *
 * @param $form
 * @param $form_state
 *
 * @return mixed
 * @throws \CiviCRM_API3_Exception
 */
function _ilga_approval_config_form($form, &$form_state)
{

    $query = db_query("SELECT nid, title FROM {node} WHERE type='webform'");
    $webformOptions = [];
    $records = $query->fetchAll();
    foreach ($records as $record) {
        $webformOptions[$record->nid] = $record->title;
    }

    $form[ILGA_APPLICATION_WEBFORM_NID] = [
        "#title" => 'Select the webform, that must be used for the membership application',
        '#type' => 'select',
        '#options' => $webformOptions,
        '#default_value' => variable_get(ILGA_APPLICATION_WEBFORM_NID, array_keys($webformOptions)[0]),
    ];
    return system_settings_form($form);
}

/**
 * Implements the permission hook
 * @return array
 */
function ilga_approval_permission()
{
    return array(
        'use ilga approval' => array(
            'title' => t('Use ILGA approval'),
            'description' => t('Standard tasks for ILGA approval module'),
        ),
    );
}

/* hook_views_api() */
/**
 * @return array
 */
function ilga_approval_views_api()
{
    return [
        'api' => 3.0,
        'path' => drupal_get_path('module', 'ilga_approval') . '/views',
    ];
}

/* Helpers */
/**
 * @param $form
 * @param $form_state
 * @param $contactId
 * @return array
 * @throws CiviCRM_API3_Exception
 */
function ilga_approval_view_comments($form, &$form_state, $contactId)
{

    civicrm_initialize();
    $config = ilga_approval_config::singleton();
    $sql = "SELECT act.id AS activity_id
          ,      act.activity_date_time AS activity_date_time
          ,      act.details AS activity_details
          ,      ad.{$config->getApproveDenyCustomFields()['Can_this_organisation_become_an_ILGA_member']} approvedeny
          ,      cnt.display_name AS display_name
          ,      email.email AS email
          FROM   civicrm_case cas
          JOIN   civicrm_case_contact cc     ON (cc.case_id = cas.id AND cc.contact_id=%1)
          JOIN   civicrm_case_activity cact  ON (cact.case_id = cas.id)
          JOIN   civicrm_activity      act   ON (act.id = cact.activity_id AND act.is_deleted=0 AND act.activity_type_id ={$config->getApprovalActivityTypeId()} AND act.is_current_revision=1)
          JOIN   civicrm_activity_contact acc ON (acc.activity_id = act.id and acc.record_type_id=2)
          JOIN   civicrm_contact          cnt ON (acc.contact_id  = cnt.id)
          JOIN   {$config->getApproveDenyCustomTable()} ad ON (ad.entity_id = act.id)
          LEFT JOIN civicrm_email         email ON (email.contact_id=cnt.id AND email.is_primary=1)
          WHERE  cas.case_type_id = {$config->getApprovalCaseTypeId()}
         ";

    $dao = CRM_Core_DAO::executeQuery($sql, [
        '1' => [$contactId, 'Integer'],
    ]);

    $rows = [];
    while ($dao->fetch()) {
        $row = array(
            'activity_date_time' => $dao->activity_date_time,
            'activity_details' => $dao->activity_details,
            'verdict' => $dao->approvedeny ? 'Yes' : 'No',
            'display_name' => $dao->display_name,
            'email' => $dao->email
        );
        $rows[$dao->activity_id] = $row;
    }

    $orgname = civicrm_api3('Contact', 'getvalue', array(
        'id' => $contactId,
        'return' => 'display_name'
    ));

    $form = array();
    $form['case']['#markup'] = "Applicant : $orgname";

    $form['comments']['table']['#theme'] = 'table';
    $form['comments']['table']['#header'] = [
        'Date', 'Details', 'Agreement', 'Board Member', 'Email Board Member'
    ];
    $form['comments']['table']['#rows'] = $rows;
    $form['comments']['table']['#attributes'] = array('width' => '100%');

    $form['submit']['#type'] = 'submit';
    $form['submit']['#value'] = 'Back to approval view';
    $form['submit']['#submit'] = array('_ilga_approval_view_comments_submit');
    return $form;
}

/**
 *
 */
function _ilga_approval_view_comments_submit()
{
    drupal_goto('pending-member-organisations');
}



